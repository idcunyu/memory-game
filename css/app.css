html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  background: #fff url('../img/geometry2.png');
  /* Background pattern from Subtle Patterns */
  font-family: 'Coda', cursive;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: relative;
  font-family: 'Open Sans', sans-serif;
}

h1 {
  font-weight: 300;
}

/*
 * Styles for the deck of cards
 */

.score-panel {
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap;
}

.score-panel .moves-des, .score-panel .seconds-des {
  text-align: center;
}

.deck {
  width: 660px;
  min-height: 680px;
  background: linear-gradient(160deg, #02ccba 0%, #aa7ecd 100%);
  padding: 32px;
  border-radius: 10px;
  box-shadow: 12px 15px 20px 0 rgba(46, 61, 73, 0.5);
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  margin: 0 0 3em;
}

.deck .card {
  height: 125px;
  width: 125px;
  background: #2e3d49;
  font-size: 0;
  color: #ffffff;
  border-radius: 8px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
}

/*显示被点击后展示的样式（不包含图标icon样式）*/

.deck .card.open {
  transform: rotateY(0);
  background: #02b3e4;
  cursor: default;
}

/*显示图标*/

.deck .card.show {
  font-size: 33px;
}

/*匹配成功*/

.deck .card.match {
  cursor: default;
  background: #02ccba;
  font-size: 33px;
  animation: matchUI 600ms;
}

/*匹配失败*/

.deck .card.dismatch {
  animation: dismatchUI 1s;
  background: #e42908;
  font-size: 33px;
}

@keyframes matchUI {
  from {
    transform: scale3d(1, 1, 1);
  }
  10%, 20% {
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }
  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }
  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }
  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes dismatchUI {
  from {
    transform: none;
  }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }
  to {
    transform: none;
  }
}

/*
 * Styles for the Score Panel
 */

.score-panel {
  text-align: left;
  width: 345px;
  margin-bottom: 10px;
}

.score-panel .stars {
  margin: 0;
  padding: 0;
  display: inline-block;
  margin: 0 5px 0 0;
}

.score-panel .stars li {
  list-style: none;
  display: inline-block;
}

.score-panel .restart {
  float: right;
  cursor: pointer;
}

/*
 * Styles for finalShow
 */

.finalShow {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: -2000px;
  left: 50%;
  background: rgba(255, 255, 255, 0.8);
  box-shadow: 12px 15px 20px 0 rgba(166, 166, 166, 0.5);
  border-radius: 15px;
  margin-left: -350px;
  margin-top: -170px;
  width: 700px;
  height: 340px;
}

.finalShow p {
  margin: 0;
  padding: 0;
}

.finalShow p:nth-of-type(1) {
  font-size: 3em;
  font-weight: 300;
}

.finalShow p:nth-of-type(2) {
  font-size: 1.4em;
  margin-top: 15px;
  margin-bottom: 20px;
  font-weight: 100;
}

.finalShow .stars {
  margin: 0;
  padding: 0;
  display: inline-block;
  margin: 0 5px 0 0;
  color: rgba(255, 0, 0, 0.8);
  font-size: 5em;
}

.finalShow .stars li {
  list-style: none;
  display: inline-block;
}

.finalShow button {
  transition: all 300ms ease;
  cursor: pointer;
  border-radius: 8px;
  width: 150px;
  height: 50px;
  background: #02ccba;
  border: 1px solid #02ccba;
  color: #fff;
  font-size: 1em;
}

.finalShow button:hover {
  border: 1px solid #02ccba;
  background: rgba(255, 255, 255, 0.3);
  transition: all 300ms ease;
  color: #02ccba;
}

@keyframes finalShowUI {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }
  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }
  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }
  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }
  to {
    transform: perspective(400px);
  }
}

.finalShowUI {
  animation: finalShowUI 1s;
}

@keyframes finalShowOutUI {
  from {
    transform: perspective(400px);
  }
  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }
  to {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

.finalShowOutUI {
  animation: finalShowOutUI 1s;
}
